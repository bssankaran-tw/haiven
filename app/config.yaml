application_name: ${TEAMAI_APPLICATION_NAME}

knowledge_pack_path: ${KNOWLEDGE_PACK_PATH}

enabled_providers: ${ENABLED_PROVIDERS}

default_models:
  chat:
  vision: ${ENABLED_VISION_MODEL}
  embeddings: ${ENABLED_EMBEDDINGS_MODEL}


identity_providers:
  - id: id-provider-1
    name: Default Identity Provider
    client_id: ${OAUTH_CLIENT_ID}
    client_secret: ${OAUTH_CLIENT_SECRET}
    configuration_url: ${OPENID_CONF_URL}

  - id: id-provider-2
    name: Secondary Identity Provider
    client_id: ${AUTH0_OAUTH_CLIENT_ID}
    client_secret: ${AUTH0_OAUTH_CLIENT_SECRET}
    configuration_url: ${AUTH0_OPENID_CONF_URL}

models:
  - id: azure-gpt35
    name: GPT-3.5 on Azure
    provider: Azure
    features:
      - text-generation
      - stop-sequence
    config:
      azure_endpoint: ${AZURE_OPENAI_API_BASE}
      api_version: ${AZURE_OPENAI_API_VERSION}
      azure_deployment: ${AZURE_OPENAI_DEPLOYMENT_NAME_GPT35}
      api_key: ${AZURE_OPENAI_API_KEY}

  - id: azure-gpt4
    name: GPT-4 on Azure
    provider: Azure
    features:
      - text-generation
      - stop-sequence
    config:
      azure_endpoint: ${AZURE_OPENAI_API_BASE}
      api_version: ${AZURE_OPENAI_API_VERSION}
      azure_deployment: ${AZURE_OPENAI_DEPLOYMENT_NAME_GPT4}
      api_key: ${AZURE_OPENAI_API_KEY}

  - id: azure-gpt4-with-vision
    name: GPT-4 with Vision on Azure
    provider: Azure
    features:
      - image-to-text
    config:
      azure_endpoint: ${AZURE_OPENAI_API_BASE}
      api_version: ${AZURE_OPENAI_API_VERSION}
      azure_deployment: ${AZURE_OPENAI_DEPLOYMENT_NAME_GPT4_VISION}
      api_key: ${AZURE_OPENAI_API_KEY}

  - id: azure-gpt-4o
    name: GPT-4o on Azure
    provider: Azure
    features:
      - image-to-text
      - text-generation
      - stop-sequence
    config:
      azure_endpoint: ${AZURE_OPENAI_API_BASE}
      api_version: ${AZURE_OPENAI_API_VERSION}
      azure_deployment: ${AZURE_OPENAI_DEPLOYMENT_NAME_GPT4o}
      api_key: ${AZURE_OPENAI_API_KEY}

  - id: google-gemini
    name: Gemini on Google
    provider: GCP
    features:
      - text-generation
      - image-to-text
    config:
      model: gemini-1.5-flash

  - id: aws-claude-v2
    name: Claude v2 on AWS
    provider: AWS
    features:
      - text-generation
      - stop-sequence
    config:
      model_id: anthropic.claude-v2
      region_name: ${AWS_BEDROCK_REGION}

  - id: aws-claude-v3
    name: Claude v3 on AWS
    provider: AWS
    features:
      - text-generation
      - stop-sequence
      - image-to-text
    config:
      model_id: anthropic.claude-3-sonnet-20240229-v1:0
      anthropic_version: bedrock-2023-05-31
      region_name: ${AWS_BEDROCK_REGION}

  - id: openai-gpt35
    name: GPT-3.5 on OpenAI
    provider: OPENAI
    features:
      - text-generation
      - stop-sequence
    config:
      model_name: gpt-3.5-turbo-16k
      api_key: ${OPENAI_API_KEY}

  - id: openai-gpt-4o
    name: GPT-4o on OpenAI
    provider: OPENAI
    features:
      - text-generation
      - stop-sequence
      - image-to-text
    config:
      model_name: gpt-4o
      api_key: ${OPENAI_API_KEY}

  - id: ollama-local-llama2
    name: Local - Ollama llama2
    provider: ollama
    features:
      - text-generation
    config:
      base_url: ${OLLAMA_HOST}
      model: llama2

  - id: ollama-local-llama3
    name: Local - Ollama llama3
    provider: ollama
    features:
      - text-generation
    config:
      base_url: ${OLLAMA_HOST}
      model: llama3:8b

  - id: ollama-local-mistral
    name: Local - Ollama Mistral
    provider: ollama
    features:
      - text-generation
    config:
      base_url: ${OLLAMA_HOST}
      model: mistral

  - id: ollama-local-llava
    name: Local - Ollama Llava
    provider: ollama
    features:
      - text-generation
    config:
      base_url: ${OLLAMA_HOST}
      model: llava:7b

embeddings:
  - id: text-embedding-ada-002
    name: Text Embedding Ada 002 on Azure
    provider: azure
    config:
      azure_endpoint: ${AZURE_OPENAI_API_BASE}
      api_version: ${AZURE_OPENAI_API_VERSION_EMBEDDINGS}
      azure_deployment: ${AZURE_OPENAI_DEPLOYMENT_NAME_EMBEDDINGS}
      api_key: ${AZURE_OPENAI_API_KEY}

  - id: open-ai-text-embedding-ada-002
    name: Text Embedding Ada v2 on OpenAI
    provider: OpenAI
    config:
      model: text-embedding-ada-002
      api_key: ${OPENAI_API_KEY}

  - id: amazon.titan-text-express-v1
    name: Titan text Embedding on AWS
    provider: AWS
    config:
      aws_region: us-east-1

  - id: ollama
    name: Ollama Embeddings (local)
    provider: ollama
    config:
      base_url: ${OLLAMA_HOST}
      model: llama2

  - id: ollama-mxbai-embed-large
    name: Ollama Embeddings mxbai-embed-large (local)
    provider: ollama
    config:
      base_url: ${OLLAMA_HOST}
      model: mxbai-embed-large

  - id: ollama-nomic-embed-text
    name: Ollama Embeddings nomic-embed-text (local)
    provider: ollama
    config:
      base_url: ${OLLAMA_HOST}
      model: nomic-embed-text

